/*******************************************************************************
 * Copyright 2014 Time Inc
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package com.timeInc.ark.event;

import java.io.Serializable;
import java.util.Date;

import com.timeInc.ark.role.PublicationGroup;
import com.timeInc.ark.role.User;

/**
 * Represents events generated by Ark.
 */
public abstract class AbstractEvent implements Serializable {
	private static final long serialVersionUID = 1L;

	private Integer id;
	
	private PublicationGroup publicationGroup;
	
	private Date date;
	
	private String userName;
	private String name;
	
	private String description;
	
	AbstractEvent() {}
	
	/**
	 * Instantiates a new abstract event.
	 *
	 * @param user the user
	 * @param publicationGroup the publication group
	 * @param occurrence the occurrence
	 * @param description the description
	 */
	public AbstractEvent(User user, PublicationGroup publicationGroup, Date occurrence,
			String description) {
		
		this.userName = user.getUserName();
		this.name = user.getName();
		
		this.publicationGroup = publicationGroup;
		this.date = occurrence;
		this.description = description;
	}

	/**
	 * Gets the publication name.
	 *
	 * @return the publication name
	 */
	public String getPublicationName() {
		return publicationGroup.getName();
	}


	/**
	 * Gets the occurrence.
	 *
	 * @return the occurrence
	 */
	public Date getOccurrence() {
		return date;
	}


	/**
	 * Gets the user name.
	 *
	 * @return the user name
	 */
	public String getUserName() {
		return userName;
	}


	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	public String getName() {
		return name;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	public String getDescription() {
		return description;
	}

	/**
	 * Gets the event name.
	 *
	 * @return the event name
	 */
	public abstract String getEventName();
}
